/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visao;

import Controle.cadastroShow;
import Controller.cadastroShowController;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author laien_000
 */
public class TelaCadastroShow extends javax.swing.JFrame {

    /**
     * Creates new form cadastroShow
     */
    public TelaCadastroShow() {
        initComponents();
        jBexcluir.setEnabled(false);
        jBatualizar.setEnabled(false);
        idAgenda.setEnabled(false);
        jBhabilitarCamapos.setEnabled(false);

        data.setDate(new java.util.Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        valor = new javax.swing.JTextField();
        data = new com.toedter.calendar.JDateChooser();
        horarioInicio = new javax.swing.JComboBox();
        horarioFim = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        informacoes = new javax.swing.JTextArea();
        genero = new javax.swing.JComboBox();
        jBSalvar = new javax.swing.JToggleButton();
        jCShowPrincipal = new javax.swing.JCheckBox();
        jBhabilitarCamapos = new javax.swing.JToggleButton();
        jBatualizar = new javax.swing.JToggleButton();
        jBexcluir = new javax.swing.JButton();
        idAgenda = new javax.swing.JTextField();
        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1035, 660));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setPreferredSize(new java.awt.Dimension(1035, 634));

        jBVoltar.setText("Voltar");
        jBVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVoltarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome Cantor / Banda:");

        jLabel2.setText("Valor Show:");

        jLabel3.setText("Data Show:");

        jLabel4.setText("Horario Inicio Show:");

        jLabel5.setText("Horario Fim Show:");

        jLabel6.setText("Genero Show:");

        jLabel8.setText("Informaçõe:");

        valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorActionPerformed(evt);
            }
        });
        valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                valorKeyTyped(evt);
            }
        });

        horarioInicio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30", "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));
        horarioInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horarioInicioActionPerformed(evt);
            }
        });

        horarioFim.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "00:00", "00:30", "01:00", "01:30", "02:00", "02:30", "03:00", "03:30", "04:00", "04:30", "05:00", "05:30", "06:00", "06:30", "07:00", "07:30", "08:00", "08:30", "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30", "18:00", "18:30", "19:00", "19:30", "20:00", "20:30", "21:00", "21:30", "22:00", "22:30", "23:00", "23:30" }));

        informacoes.setColumns(20);
        informacoes.setRows(5);
        jScrollPane1.setViewportView(informacoes);

        genero.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Axé", "Blues", "Country", "Eletrônica", "Forró", "Funk", "Gospel", "Hip Hop", "Jazz", "MPB", "Música clássica", "Pagode", "Pop", "Rap", "Reggae", "Rock", "Samba", "Sertanejo" }));
        genero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generoActionPerformed(evt);
            }
        });

        jBSalvar.setText("Salvar");
        jBSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSalvarActionPerformed(evt);
            }
        });

        jCShowPrincipal.setText("Show Principal");

        jBhabilitarCamapos.setText("Habilitar Campos");
        jBhabilitarCamapos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBhabilitarCamaposActionPerformed(evt);
            }
        });

        jBatualizar.setText("Atualizar");
        jBatualizar.setPreferredSize(new java.awt.Dimension(113, 23));
        jBatualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBatualizarActionPerformed(evt);
            }
        });

        jBexcluir.setText("Excluir");
        jBexcluir.setPreferredSize(new java.awt.Dimension(113, 23));
        jBexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBexcluirActionPerformed(evt);
            }
        });

        idAgenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idAgendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                        .addComponent(nome)
                        .addComponent(valor)
                        .addComponent(data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(horarioInicio, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(horarioFim, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(genero, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jCShowPrincipal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 225, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBexcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBatualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBVoltar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBSalvar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBhabilitarCamapos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(idAgenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(horarioInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(horarioFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCShowPrincipal)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(132, 132, 132))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jBexcluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBatualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBhabilitarCamapos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBVoltar)
                        .addContainerGap())))
        );

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        label1.setText("Cadastro de Eventos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1025, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(427, Short.MAX_VALUE)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(368, 368, 368))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleParent(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVoltarActionPerformed
        // TODO add your handling code here:
        telaPrincipal home = new telaPrincipal();
        home.setVisible(true);
        dispose();
    }//GEN-LAST:event_jBVoltarActionPerformed

    private void horarioInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horarioInicioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horarioInicioActionPerformed

    private void generoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_generoActionPerformed

    private void jBSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSalvarActionPerformed
        // TODO add your handling code here:

        try {
            cadastroShow cadastro = new cadastroShow();
            cadastro.setNome(nome.getText());
            cadastro.setValor(Double.parseDouble(valor.getText().replace(',', '.')));
            cadastro.setData(data.getDate());
            cadastro.setHorarioInicio((String) horarioInicio.getSelectedItem());
            cadastro.setHorarioFim((String) horarioFim.getSelectedItem());
            cadastro.setGeneroShow((String) genero.getSelectedItem());
            if (jCShowPrincipal.isSelected()) {
                cadastro.setShowPrincipal(true);
                JOptionPane.showMessageDialog(null, "Caixa selecionada. ");
            } else {
                cadastro.setShowPrincipal(false);
                JOptionPane.showMessageDialog(null, "Caixa nao selecionada.");
            }

            cadastro.setInformacaoGeral(informacoes.getText());

            if (genero.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Selecione um genero para o show.");
            }

            if (cadastro.getShowPrincipal() == false) {
                cadastroShowController.persistir(cadastro);
                JOptionPane.showMessageDialog(null, "Cadastro Realizado com Sucesso.");
                telaPrincipal home = new telaPrincipal();
                home.setVisible(true);
                dispose();
            } else {
                cadastroShow cadastroPesquisa = new cadastroShow();

                cadastroPesquisa = cadastroShowController.pesquisa(cadastro);

                if (cadastroPesquisa.getShowPrincipal() == null) {

                    cadastroShowController.persistir(cadastro);
                    JOptionPane.showMessageDialog(null, "Cadastro Realizado com Sucesso.");
                    telaPrincipal home = new telaPrincipal();
                    home.setVisible(true);
                    dispose();
                } else {
                    if (cadastroPesquisa.getShowPrincipal() == true && cadastro.getShowPrincipal() == true) {
                        JOptionPane.showMessageDialog(null, "Já Possui Show Principal nesta data.");
                    } else {
                        cadastroShowController.persistir(cadastro);
                        JOptionPane.showMessageDialog(null, "Cadastro Realizado com Sucesso.");
                        telaPrincipal home = new telaPrincipal();
                        home.setVisible(true);
                        dispose();
                    }
                }

            }
        } catch (SQLException e) {
            System.err.println("Erro SQL ao Salvar o Show " + e);
            e.printStackTrace();
        } catch (NullPointerException erro) {
            System.err.println("erro Null " + erro);
            erro.printStackTrace();
        } catch (Exception ex) {
            System.err.println("Erro ao Salvar o Show Tela cadastro " + ex);
            ex.printStackTrace();
        }


    }//GEN-LAST:event_jBSalvarActionPerformed

    private void valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_valorKeyTyped
        int ascii = evt.getKeyChar();

        if (!(ascii >= 44 && ascii <= 57 && ascii != 45 && ascii != 47) && !(ascii == evt.VK_BACK_SPACE)) {

            evt.consume();

        }

        if (valor.getText().length() >= 10) {

            evt.consume();

        }


    }//GEN-LAST:event_valorKeyTyped

    public void preencherTela(cadastroShow preencher) {
        bloquearCampos();
        jBSalvar.setEnabled(false);
        jBhabilitarCamapos.setEnabled(true);
        idAgenda.setText(String.valueOf(preencher.getIdAgenda()));
        nome.setText(preencher.getNome());
        data.setDate(preencher.getData());
        valor.setText(String.valueOf(preencher.getValor()));
        horarioInicio.setSelectedItem(preencher.getHorarioInicio());
        horarioFim.setSelectedItem(preencher.getHorarioFim());
        genero.setSelectedItem(preencher.getGeneroShow());
        jCShowPrincipal.setSelected(preencher.getShowPrincipal());
        informacoes.setText(preencher.getInformacaoGeral());

    }

    public void bloquearCampos() {
        idAgenda.setEditable(false);
        nome.setEditable(false);
        data.setEnabled(false);
        valor.setEditable(false);
        horarioInicio.setEnabled(false);
        horarioFim.setEnabled(false);
        genero.setEnabled(false);
        jCShowPrincipal.setEnabled(false);
        informacoes.setEditable(false);
    }

    public void habilitarCampos() {

        jBexcluir.setEnabled(true);
        jBatualizar.setEnabled(true);
        nome.setEditable(true);
        data.setEnabled(true);
        valor.setEditable(true);
        horarioInicio.setEnabled(true);
        horarioFim.setEnabled(true);
        genero.setEnabled(true);
        jCShowPrincipal.setEnabled(true);
        informacoes.setEditable(true);
    }
    private void valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorActionPerformed

    private void jBhabilitarCamaposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBhabilitarCamaposActionPerformed
        // TODO add your handling code here:
        habilitarCampos();
        jBSalvar.setEnabled(false);
    }//GEN-LAST:event_jBhabilitarCamaposActionPerformed

    private void jBexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBexcluirActionPerformed
        // TODO add your handling code here:
        try {
            int idEvento;
            idEvento = Integer.parseInt(idAgenda.getText());
            JOptionPane.showMessageDialog(null, "ID Evento para deletar " + idEvento);
            if (JOptionPane.showConfirmDialog(null, "Deseja Excluir o Evento? ", "PERGUNTA", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                cadastroShowController.detetar(idEvento);
                TelaPesquisa telaPesquias = new TelaPesquisa();
                telaPesquias.setVisible(true);
                dispose();

            }
        } catch (SQLException ex) {
            System.err.println("Erro SQL ao Deletar o Evento. " + ex);
            ex.printStackTrace();
        } catch (Exception e) {
            System.err.println("Erro ao Deletar o Evento. " + e);
            e.printStackTrace();
        }

    }//GEN-LAST:event_jBexcluirActionPerformed

    private void idAgendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idAgendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idAgendaActionPerformed

    private void jBatualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBatualizarActionPerformed
        // TODO add your handling code here:

        try {
            cadastroShow atualizarCadastro = new cadastroShow();
            atualizarCadastro.setIdAgenda(Integer.parseInt(idAgenda.getText()));
            atualizarCadastro.setNome(nome.getText());
            atualizarCadastro.setValor(Double.parseDouble(valor.getText().replace(',', '.')));
            atualizarCadastro.setData(data.getDate());
            atualizarCadastro.setHorarioInicio((String) horarioInicio.getSelectedItem());
            atualizarCadastro.setHorarioFim((String) horarioFim.getSelectedItem());
            atualizarCadastro.setGeneroShow((String) genero.getSelectedItem());
            if (jCShowPrincipal.isSelected()) {
                atualizarCadastro.setShowPrincipal(true);
                JOptionPane.showMessageDialog(null, "Caixa selecionada. ");
            } else {
                atualizarCadastro.setShowPrincipal(false);
                JOptionPane.showMessageDialog(null, "Caixa nao selecionada.");
            }

            atualizarCadastro.setInformacaoGeral(informacoes.getText());

            if (genero.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Selecione um genero para o show.");
            }

            if (atualizarCadastro.getShowPrincipal() == false) {

                cadastroShowController.atualizar(atualizarCadastro);

                JOptionPane.showMessageDialog(null, "Cadastro Realizado com Sucesso.");
                telaPrincipal home = new telaPrincipal();
                home.setVisible(true);
                dispose();
            } else {
                cadastroShow cadastroPesquisa = new cadastroShow();

                cadastroPesquisa = cadastroShowController.pesquisa(atualizarCadastro);
                if (cadastroPesquisa.getShowPrincipal() == null) {
                    cadastroShowController.atualizar(atualizarCadastro);
                    JOptionPane.showMessageDialog(null, "Cadastro Realizado com Sucesso.");
                    telaPrincipal home = new telaPrincipal();
                    home.setVisible(true);
                    dispose();
                } else {
                    if (cadastroPesquisa.getShowPrincipal() == true && atualizarCadastro.getShowPrincipal() == true) {
                        JOptionPane.showMessageDialog(null, "Já Possui Show Principal nesta data.");
                    } else {
                        cadastroShowController.atualizar(atualizarCadastro);
                        JOptionPane.showMessageDialog(null, "Cadastro Realizado com Sucesso.");
                        telaPrincipal home = new telaPrincipal();
                        home.setVisible(true);
                        dispose();
                    }
                }

            }
        } catch (NullPointerException erro) {
            System.err.println("erro Null " + erro);
            erro.printStackTrace();
        } catch (Exception ex) {
            System.err.println("Erro ao Atualizar o Show Tela cadastro " + ex);
            ex.printStackTrace();
        }


    }//GEN-LAST:event_jBatualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
     /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
        //try {
    //    for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    //        if ("Nimbus".equals(info.getName())) {
    //            javax.swing.UIManager.setLookAndFeel(info.getClassName());
    //            break;
    //        }
    //    }
    //} catch (ClassNotFoundException ex) {
    //    java.util.logging.Logger.getLogger(TelaCadastroShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //} catch (InstantiationException ex) {
    //     java.util.logging.Logger.getLogger(TelaCadastroShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    // } catch (IllegalAccessException ex) {
    //     java.util.logging.Logger.getLogger(TelaCadastroShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    // } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    //     java.util.logging.Logger.getLogger(TelaCadastroShow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    // }
    //</editor-fold>

    /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
    //    public void run() {
    //        new TelaCadastroShow().setVisible(true);
    //   }
    //});*/
    // }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser data;
    private javax.swing.JComboBox genero;
    private javax.swing.JComboBox horarioFim;
    private javax.swing.JComboBox horarioInicio;
    private javax.swing.JTextField idAgenda;
    private javax.swing.JTextArea informacoes;
    private javax.swing.JToggleButton jBSalvar;
    private javax.swing.JButton jBVoltar;
    private javax.swing.JToggleButton jBatualizar;
    private javax.swing.JButton jBexcluir;
    private javax.swing.JToggleButton jBhabilitarCamapos;
    private javax.swing.JCheckBox jCShowPrincipal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JTextField nome;
    private javax.swing.JTextField valor;
    // End of variables declaration//GEN-END:variables
}
